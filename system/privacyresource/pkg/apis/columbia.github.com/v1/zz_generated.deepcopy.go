// +build !ignore_autogenerated

/*
Copyright (c) 2020 Mingen Pan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocateRequest) DeepCopyInto(out *AllocateRequest) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.MinBudget.DeepCopyInto(&out.MinBudget)
	in.ExpectedBudget.DeepCopyInto(&out.ExpectedBudget)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocateRequest.
func (in *AllocateRequest) DeepCopy() *AllocateRequest {
	if in == nil {
		return nil
	}
	out := new(AllocateRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocateResponse) DeepCopyInto(out *AllocateResponse) {
	*out = *in
	if in.Budgets != nil {
		in, out := &in.Budgets, &out.Budgets
		*out = make(map[string]BudgetAccount, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocateResponse.
func (in *AllocateResponse) DeepCopy() *AllocateResponse {
	if in == nil {
		return nil
	}
	out := new(AllocateResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetAccount) DeepCopyInto(out *BudgetAccount) {
	*out = *in
	in.Acquired.DeepCopyInto(&out.Acquired)
	in.Reserved.DeepCopyInto(&out.Reserved)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetAccount.
func (in *BudgetAccount) DeepCopy() *BudgetAccount {
	if in == nil {
		return nil
	}
	out := new(BudgetAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetAccountUpdate) DeepCopyInto(out *BudgetAccountUpdate) {
	*out = *in
	if in.Acquired != nil {
		in, out := &in.Acquired, &out.Acquired
		*out = new(BudgetErrorPair)
		(*in).DeepCopyInto(*out)
	}
	if in.Reserved != nil {
		in, out := &in.Reserved, &out.Reserved
		*out = new(BudgetErrorPair)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetAccountUpdate.
func (in *BudgetAccountUpdate) DeepCopy() *BudgetAccountUpdate {
	if in == nil {
		return nil
	}
	out := new(BudgetAccountUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetErrorPair) DeepCopyInto(out *BudgetErrorPair) {
	*out = *in
	in.Budget.DeepCopyInto(&out.Budget)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetErrorPair.
func (in *BudgetErrorPair) DeepCopy() *BudgetErrorPair {
	if in == nil {
		return nil
	}
	out := new(BudgetErrorPair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BudgetRequest) DeepCopyInto(out *BudgetRequest) {
	*out = *in
	if in.Constant != nil {
		in, out := &in.Constant, &out.Constant
		*out = new(PrivacyBudget)
		(*in).DeepCopyInto(*out)
	}
	if in.BudgetMap != nil {
		in, out := &in.BudgetMap, &out.BudgetMap
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BudgetRequest.
func (in *BudgetRequest) DeepCopy() *BudgetRequest {
	if in == nil {
		return nil
	}
	out := new(BudgetRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Condition.
func (in *Condition) DeepCopy() *Condition {
	if in == nil {
		return nil
	}
	out := new(Condition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumeRequest) DeepCopyInto(out *ConsumeRequest) {
	*out = *in
	if in.Consume != nil {
		in, out := &in.Consume, &out.Consume
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumeRequest.
func (in *ConsumeRequest) DeepCopy() *ConsumeRequest {
	if in == nil {
		return nil
	}
	out := new(ConsumeRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ConsumeResponse) DeepCopyInto(out *ConsumeResponse) {
	{
		in := &in
		*out = make(ConsumeResponse, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumeResponse.
func (in ConsumeResponse) DeepCopy() ConsumeResponse {
	if in == nil {
		return nil
	}
	out := new(ConsumeResponse)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dimension.
func (in *Dimension) DeepCopy() *Dimension {
	if in == nil {
		return nil
	}
	out := new(Dimension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EpsilonDeltaBudget) DeepCopyInto(out *EpsilonDeltaBudget) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EpsilonDeltaBudget.
func (in *EpsilonDeltaBudget) DeepCopy() *EpsilonDeltaBudget {
	if in == nil {
		return nil
	}
	out := new(EpsilonDeltaBudget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowReleasingOption) DeepCopyInto(out *FlowReleasingOption) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowReleasingOption.
func (in *FlowReleasingOption) DeepCopy() *FlowReleasingOption {
	if in == nil {
		return nil
	}
	out := new(FlowReleasingOption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockedBudget) DeepCopyInto(out *LockedBudget) {
	*out = *in
	in.Budget.DeepCopyInto(&out.Budget)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockedBudget.
func (in *LockedBudget) DeepCopy() *LockedBudget {
	if in == nil {
		return nil
	}
	out := new(LockedBudget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyBudget) DeepCopyInto(out *PrivacyBudget) {
	*out = *in
	if in.EpsDel != nil {
		in, out := &in.EpsDel, &out.EpsDel
		*out = new(EpsilonDeltaBudget)
		**out = **in
	}
	if in.Renyi != nil {
		in, out := &in.Renyi, &out.Renyi
		*out = make(RenyiBudget, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyBudget.
func (in *PrivacyBudget) DeepCopy() *PrivacyBudget {
	if in == nil {
		return nil
	}
	out := new(PrivacyBudget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyBudgetClaim) DeepCopyInto(out *PrivacyBudgetClaim) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyBudgetClaim.
func (in *PrivacyBudgetClaim) DeepCopy() *PrivacyBudgetClaim {
	if in == nil {
		return nil
	}
	out := new(PrivacyBudgetClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivacyBudgetClaim) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyBudgetClaimList) DeepCopyInto(out *PrivacyBudgetClaimList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivacyBudgetClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyBudgetClaimList.
func (in *PrivacyBudgetClaimList) DeepCopy() *PrivacyBudgetClaimList {
	if in == nil {
		return nil
	}
	out := new(PrivacyBudgetClaimList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivacyBudgetClaimList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyBudgetClaimSpec) DeepCopyInto(out *PrivacyBudgetClaimSpec) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]Request, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OwnedBy != nil {
		in, out := &in.OwnedBy, &out.OwnedBy
		*out = make([]corev1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyBudgetClaimSpec.
func (in *PrivacyBudgetClaimSpec) DeepCopy() *PrivacyBudgetClaimSpec {
	if in == nil {
		return nil
	}
	out := new(PrivacyBudgetClaimSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyBudgetClaimStatus) DeepCopyInto(out *PrivacyBudgetClaimStatus) {
	*out = *in
	if in.AcquiredBudgets != nil {
		in, out := &in.AcquiredBudgets, &out.AcquiredBudgets
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ReservedBudgets != nil {
		in, out := &in.ReservedBudgets, &out.ReservedBudgets
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.CommittedBudgets != nil {
		in, out := &in.CommittedBudgets, &out.CommittedBudgets
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Responses != nil {
		in, out := &in.Responses, &out.Responses
		*out = make([]Response, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyBudgetClaimStatus.
func (in *PrivacyBudgetClaimStatus) DeepCopy() *PrivacyBudgetClaimStatus {
	if in == nil {
		return nil
	}
	out := new(PrivacyBudgetClaimStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataBlock) DeepCopyInto(out *PrivateDataBlock) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Status.DeepCopyInto(&out.Status)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataBlock.
func (in *PrivateDataBlock) DeepCopy() *PrivateDataBlock {
	if in == nil {
		return nil
	}
	out := new(PrivateDataBlock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataBlock) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataBlockList) DeepCopyInto(out *PrivateDataBlockList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateDataBlock, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataBlockList.
func (in *PrivateDataBlockList) DeepCopy() *PrivateDataBlockList {
	if in == nil {
		return nil
	}
	out := new(PrivateDataBlockList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateDataBlockList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataBlockSpec) DeepCopyInto(out *PrivateDataBlockSpec) {
	*out = *in
	in.InitialBudget.DeepCopyInto(&out.InitialBudget)
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make([]Dimension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlowReleasingOption != nil {
		in, out := &in.FlowReleasingOption, &out.FlowReleasingOption
		*out = new(FlowReleasingOption)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataBlockSpec.
func (in *PrivateDataBlockSpec) DeepCopy() *PrivateDataBlockSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateDataBlockSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateDataBlockStatus) DeepCopyInto(out *PrivateDataBlockStatus) {
	*out = *in
	in.PendingBudget.DeepCopyInto(&out.PendingBudget)
	in.AvailableBudget.DeepCopyInto(&out.AvailableBudget)
	if in.AcquiredBudgetMap != nil {
		in, out := &in.AcquiredBudgetMap, &out.AcquiredBudgetMap
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ReservedBudgetMap != nil {
		in, out := &in.ReservedBudgetMap, &out.ReservedBudgetMap
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.CommittedBudgetMap != nil {
		in, out := &in.CommittedBudgetMap, &out.CommittedBudgetMap
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.LockedBudgetMap != nil {
		in, out := &in.LockedBudgetMap, &out.LockedBudgetMap
		*out = make(map[string]LockedBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateDataBlockStatus.
func (in *PrivateDataBlockStatus) DeepCopy() *PrivateDataBlockStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateDataBlockStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseRequest) DeepCopyInto(out *ReleaseRequest) {
	*out = *in
	if in.Release != nil {
		in, out := &in.Release, &out.Release
		*out = make(map[string]PrivacyBudget, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseRequest.
func (in *ReleaseRequest) DeepCopy() *ReleaseRequest {
	if in == nil {
		return nil
	}
	out := new(ReleaseRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in ReleaseResponse) DeepCopyInto(out *ReleaseResponse) {
	{
		in := &in
		*out = make(ReleaseResponse, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseResponse.
func (in ReleaseResponse) DeepCopy() ReleaseResponse {
	if in == nil {
		return nil
	}
	out := new(ReleaseResponse)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in RenyiBudget) DeepCopyInto(out *RenyiBudget) {
	{
		in := &in
		*out = make(RenyiBudget, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenyiBudget.
func (in RenyiBudget) DeepCopy() RenyiBudget {
	if in == nil {
		return nil
	}
	out := new(RenyiBudget)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenyiBudgetBlock) DeepCopyInto(out *RenyiBudgetBlock) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenyiBudgetBlock.
func (in *RenyiBudgetBlock) DeepCopy() *RenyiBudgetBlock {
	if in == nil {
		return nil
	}
	out := new(RenyiBudgetBlock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Request) DeepCopyInto(out *Request) {
	*out = *in
	if in.AllocateRequest != nil {
		in, out := &in.AllocateRequest, &out.AllocateRequest
		*out = new(AllocateRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.ConsumeRequest != nil {
		in, out := &in.ConsumeRequest, &out.ConsumeRequest
		*out = new(ConsumeRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.ReleaseRequest != nil {
		in, out := &in.ReleaseRequest, &out.ReleaseRequest
		*out = new(ReleaseRequest)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Request.
func (in *Request) DeepCopy() *Request {
	if in == nil {
		return nil
	}
	out := new(Request)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Response) DeepCopyInto(out *Response) {
	*out = *in
	if in.AllocateResponse != nil {
		in, out := &in.AllocateResponse, &out.AllocateResponse
		*out = new(AllocateResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.ConsumeResponse != nil {
		in, out := &in.ConsumeResponse, &out.ConsumeResponse
		*out = make(ConsumeResponse, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ReleaseResponse != nil {
		in, out := &in.ReleaseResponse, &out.ReleaseResponse
		*out = make(ReleaseResponse, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Response.
func (in *Response) DeepCopy() *Response {
	if in == nil {
		return nil
	}
	out := new(Response)
	in.DeepCopyInto(out)
	return out
}
